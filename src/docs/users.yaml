components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID del usuario
          example: "8ddffcfc3d03bd9e1fe87aa7"
        first_name:
          type: string
          description: Nombre del usuario
          example: "Waino"
        last_name:
          type: string
          description: Apellido del usuario
          example: "Mohr"
        email:
          type: string
          description: Correo electronico
          example: "Abby85@hotmail.com"
        password:
          type: string
          description: Contrase√±a del usuario
          example: "hashed_password"
        role:
          type: boolean
          description: Rol del usuario
          example: "user"
        pets:
          type: array
          description: Mascota/s adoptada/s
          items:
            type: object
            properties:
              _id:
                type: string
                example: "7bbb8ab1ac3b7fe890fa68a4"
  responses:
    success:
      type: object
      properties:
        response:
          type: object
        message:
          type: string
paths:
  /api/users:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      responses:
        200:
          description: Lista de usuarios obtenida con exito
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                      $ref: "#components/schemas/User"
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    types: string
                    example: Error interno del servidor
  /api/users/{uid}:
    get:
      summary: Obtener un usuario
      tags:
        - Users
      description: Devuelve un usuario especifico por su ID
      parameters:
        - name: uid
          in: path
          description: ID del usuario a buscar
          schema:
            type: string
            example: "8ddffcfc3d03bd9e1fe87aa7"
      responses:
        200:
          description: Usuario encontrado con exito
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                      $ref: "#components/schemas/User"
        404:
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    types: string
                    example: User not found             
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    types: string
                    example: Error interno del servidor
    put:
      summary: Modificar un usuario
      tags:
        - Users
      description: Modifica los datos de un usuario existente
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario a modificar
          schema:
            type: string
            example: "8ddffcfc3d03bd9e1fe87aa7"
      requestBody:
        description: Datos a actualizar del usuario
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: "Waino"
                last_name:
                  type: string
                  example: "Mohr"
                email:
                  type: string
                  example: "Abby85@hotmail.com"
                role:
                  type: string
                  example: "user"
      responses:
        200:
          description: Usuario modificado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User updated
        404:
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    types: string
                    example: User not found
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    types: string
                    example: Error interno del servidor
    delete:
      summary: Eliminar un usuario
      tags:
        - Users
      description: Elimina un usuario de la base de datos
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario a eliminar
          schema:
            type: string
            example: "7bbb8ab1ac3b7fe890fa68a4"
      responses:
        200:
          description: Usuario eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User deleted
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    types: string
                    example: Error interno del servidor